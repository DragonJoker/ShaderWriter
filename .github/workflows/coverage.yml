name: Coverage

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches:
      - development
      - master
  release:
    types:
      - created

jobs:
  coverage-windows:
    strategy:
      matrix:
        os: [[windows-latest,x64-windows,msvc]]
        buildType: [Debug]
    runs-on: ${{ matrix.os[0] }}
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: |
        git submodule update --init -- "CMake"
        git submodule update --init -- "external/vcpkg"
    - name: Setup OpenCppCoverage
      id: setup_opencppcoverage
      run: |
        choco install OpenCppCoverage -y
        echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: '${{ github.workspace }}/external/vcpkg'
        vcpkgJsonGlob: 'vcpkg.json'
        runVcpkgInstall: true
    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build-${{ matrix.buildType }}
    - name: Configure CMake
      id: configure
      shell: bash
      working-directory: ${{runner.workspace}}/build-${{ matrix.buildType }}
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.buildType }} --preset ci -DPROJECTS_WARNINGS_AS_ERRORS=OFF -DPROJECTS_COVERAGE=ON
    - name: Build coverage report
      if: (steps.configure.conclusion == 'success')
      id: coverage
      working-directory: ${{runner.workspace}}/build-${{ matrix.buildType }}
      shell: bash
      run: |
        cmake --build . --parallel 2 --target ShaderWriterCoverage --config ${{ matrix.buildType }}
    - name: Upload coverage reports to Codecov
      if: (steps.coverage.conclusion == 'success')
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ${{ github.workspace }}/doc/ShaderWriterCoverage.xml
